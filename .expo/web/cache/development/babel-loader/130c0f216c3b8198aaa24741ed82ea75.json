{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/vic/reactnative/shop/tutorials/step8-navigation/TabNavigation.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport MainView from \"./components/MainView\";\nimport SecondaryView from \"./components/SecondaryView\";\nimport { Ionicons } from \"@expo/vector-icons\";\nvar Tab = createBottomTabNavigator();\n\nvar TabNavigation = function (_Component) {\n  _inherits(TabNavigation, _Component);\n\n  var _super = _createSuper(TabNavigation);\n\n  function TabNavigation() {\n    _classCallCheck(this, TabNavigation);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(TabNavigation, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(NavigationContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 7\n        }\n      }, React.createElement(Tab.Navigator, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 9\n        }\n      }, React.createElement(Tab.Screen, {\n        name: \"Main\",\n        component: MainView,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref) {\n            var color = _ref.color,\n                size = _ref.size;\n            return React.createElement(Ionicons, {\n              name: \"ios-home\",\n              color: color,\n              size: size,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 21,\n                columnNumber: 17\n              }\n            });\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }\n      }), React.createElement(Tab.Screen, {\n        name: \"Secondary\",\n        component: SecondaryView,\n        options: {\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var color = _ref2.color,\n                size = _ref2.size;\n            return React.createElement(Ionicons, {\n              name: \"ios-list\",\n              color: color,\n              size: size,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 17\n              }\n            });\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return TabNavigation;\n}(Component);\n\nexport { TabNavigation as default };","map":{"version":3,"sources":["/home/vic/reactnative/shop/tutorials/step8-navigation/TabNavigation.js"],"names":["React","Component","NavigationContainer","createBottomTabNavigator","MainView","SecondaryView","Ionicons","Tab","TabNavigation","tabBarIcon","color","size"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,OAAOC,QAAP;AACA,OAAOC,aAAP;AACA,SAASC,QAAT;AAEA,IAAMC,GAAG,GAAGJ,wBAAwB,EAApC;;IAEqBK,a;;;;;;;;;;;;;WACnB,kBAAS;AACP,aACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD,CAAK,SAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD,CAAK,MAAL;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,SAAS,EAAEJ,QAFb;AAGE,QAAA,OAAO,EAAE;AACPK,UAAAA,UAAU,EAAE;AAAA,gBAAGC,KAAH,QAAGA,KAAH;AAAA,gBAAUC,IAAV,QAAUA,IAAV;AAAA,mBACV,oBAAC,QAAD;AAAU,cAAA,IAAI,EAAC,UAAf;AAA0B,cAAA,KAAK,EAAED,KAAjC;AAAwC,cAAA,IAAI,EAAEC,IAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADU;AAAA;AADL,SAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EASE,oBAAC,GAAD,CAAK,MAAL;AACE,QAAA,IAAI,EAAC,WADP;AAEE,QAAA,SAAS,EAAEN,aAFb;AAGE,QAAA,OAAO,EAAE;AACPI,UAAAA,UAAU,EAAE;AAAA,gBAAGC,KAAH,SAAGA,KAAH;AAAA,gBAAUC,IAAV,SAAUA,IAAV;AAAA,mBACV,oBAAC,QAAD;AAAU,cAAA,IAAI,EAAC,UAAf;AAA0B,cAAA,KAAK,EAAED,KAAjC;AAAwC,cAAA,IAAI,EAAEC,IAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADU;AAAA;AADL,SAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,CADF,CADF;AAsBD;;;;EAxBwCV,S;;SAAtBO,a","sourcesContent":["import React, { Component } from 'react'\nimport { Text, View } from 'react-native'\nimport { NavigationContainer } from '@react-navigation/native'\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs'\nimport MainView from './components/MainView'\nimport SecondaryView from './components/SecondaryView'\nimport { Ionicons } from 'react-native-vector-icons';\n\nconst Tab = createBottomTabNavigator();\n\nexport default class TabNavigation extends Component {\n  render() {\n    return (\n      <NavigationContainer> \n        <Tab.Navigator>\n          <Tab.Screen \n            name=\"Main\" \n            component={MainView} \n            options={{ \n              tabBarIcon: ({ color, size }) => (\n                <Ionicons name=\"ios-home\" color={color} size={size} />)\n            }}\n          />\n          <Tab.Screen \n            name=\"Secondary\" \n            component={SecondaryView} \n            options={{ \n              tabBarIcon: ({ color, size }) => (\n                <Ionicons name=\"ios-list\" color={color} size={size} />)\n            }}\n          />\n        </Tab.Navigator>\n      </NavigationContainer>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}