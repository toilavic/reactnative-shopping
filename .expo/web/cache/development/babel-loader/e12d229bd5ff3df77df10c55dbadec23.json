{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/vic/reactnative/shop/tutorials/step11-jwt-auth/components/TodoApp.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { createStackNavigator } from '@react-navigation/stack';\nimport View1 from \"./todoApp/View1\";\nimport Todos from \"./todoApp/Todos\";\nvar Stack = createStackNavigator();\n\nvar TodoApp = function (_Component) {\n  _inherits(TodoApp, _Component);\n\n  var _super = _createSuper(TodoApp);\n\n  function TodoApp(props) {\n    var _this;\n\n    _classCallCheck(this, TodoApp);\n\n    _this = _super.call(this, props);\n\n    _this.onTodoAdd = function (description, dueDate) {\n      fetch(_this.props.apiURI + '/todosJWT', {\n        method: 'POST',\n        headers: {\n          \"Authorization\": \"Bearer \" + _this.props.jwt,\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          description: description,\n          dueDate: dueDate\n        })\n      }).then(function (response) {\n        if (response.ok == false) {\n          throw new Error(\"HTTP Code \" + response.status + \" - \" + JSON.stringify(response.json()));\n        }\n\n        return response.json();\n      }).then(function (json) {\n        console.log(\"Todos POST successful\");\n        console.log(\"Received following JSON\");\n        console.log(json);\n\n        _this.setState({\n          todos: json\n        });\n      }).catch(function (error) {\n        console.log(\"Error message:\");\n        console.log(error.message);\n      });\n    };\n\n    _this.state = {\n      todos: []\n    };\n    return _this;\n  }\n\n  _createClass(TodoApp, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      console.log('getting todos');\n      fetch(this.props.apiURI + '/todosJWT', {\n        method: 'GET',\n        headers: {\n          \"Authorization\": \"Bearer \" + this.props.jwt\n        }\n      }).then(function (response) {\n        if (response.ok == false) {\n          throw new Error(\"HTTP Code \" + response.status + \" - \" + JSON.stringify(response.json()));\n        }\n\n        return response.json();\n      }).then(function (json) {\n        console.log(\"Todos GET successful\");\n        console.log(\"Received following JSON\");\n        console.log(json);\n\n        _this2.setState({\n          todos: json\n        });\n      }).catch(function (error) {\n        console.log(\"Error message:\");\n        console.log(error.message);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(Stack.Navigator, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 7\n        }\n      }, React.createElement(Stack.Screen, {\n        name: \"View1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }\n      }, function (props) {\n        return React.createElement(View1, _extends({}, props, {\n          onLogout: _this3.props.onLogout,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 22\n          }\n        }));\n      }), React.createElement(Stack.Screen, {\n        name: \"Todos\",\n        options: {\n          title: 'Todo List'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }\n      }, function (props) {\n        return React.createElement(Todos, _extends({}, props, {\n          todos: _this3.state.todos,\n          onTodoAdd: _this3.onTodoAdd,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 22\n          }\n        }));\n      }));\n    }\n  }]);\n\n  return TodoApp;\n}(Component);\n\nexport { TodoApp as default };","map":{"version":3,"sources":["/home/vic/reactnative/shop/tutorials/step11-jwt-auth/components/TodoApp.js"],"names":["React","Component","createStackNavigator","View1","Todos","Stack","TodoApp","props","onTodoAdd","description","dueDate","fetch","apiURI","method","headers","jwt","body","JSON","stringify","then","response","ok","Error","status","json","console","log","setState","todos","catch","error","message","state","onLogout","title"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Text, View } from 'react-native'\nimport { createStackNavigator } from '@react-navigation/stack'\nimport View1 from './todoApp/View1'\nimport Todos from './todoApp/Todos'\n\nconst Stack = createStackNavigator();\n\nexport default class TodoApp extends Component {\n\n  constructor(props) {\n\n    super(props);\n    this.state = {\n      todos: []\n    }    \n  }\n\n  componentDidMount() {\n    console.log('getting todos');\n    fetch(this.props.apiURI + '/todosJWT', {\n      method: 'GET',\n      headers: {\n        \"Authorization\": \"Bearer \" + this.props.jwt\n      }\n    })\n    .then(response => {\n      if (response.ok == false) {\n        throw new Error(\"HTTP Code \" + response.status + \" - \" + JSON.stringify(response.json()));\n      }\n      return response.json();\n    })\n    .then(json => {\n      console.log(\"Todos GET successful\")\n      console.log(\"Received following JSON\");\n      console.log(json);\n\n      this.setState({ todos: json})\n    })\n    .catch(error => {\n      console.log(\"Error message:\")\n      console.log(error.message)\n    });\n  }\n  \n\n  onTodoAdd = (description, dueDate) => {\n    fetch(this.props.apiURI + '/todosJWT', {\n      method: 'POST',\n      headers: {\n        \"Authorization\": \"Bearer \" + this.props.jwt,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({ description, dueDate })\n    })\n    .then(response => {\n      if (response.ok == false) {\n        throw new Error(\"HTTP Code \" + response.status + \" - \" + JSON.stringify(response.json()));\n      }\n      return response.json();\n    })\n    .then(json => {\n      console.log(\"Todos POST successful\")\n      console.log(\"Received following JSON\");\n      console.log(json);\n\n      this.setState({ todos: json})\n    })\n    .catch(error => {\n      console.log(\"Error message:\")\n      console.log(error.message)\n    });\n  }\n\n  render() {\n    return (\n      <Stack.Navigator>\n        <Stack.Screen name=\"View1\">\n          { props => <View1 {...props} onLogout={ this.props.onLogout }/>}\n        </Stack.Screen>\n        <Stack.Screen name=\"Todos\" options={{ title: 'Todo List' }} >    \n          { props => <Todos {...props} todos={ this.state.todos } onTodoAdd={ this.onTodoAdd }/>}\n        </Stack.Screen>\n      </Stack.Navigator>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}