{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/vic/reactnative/shop/components/TodoApp.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport View1 from \"./todoApp/View1\";\nimport Home from \"../screens/Home\";\nimport EditItem from \"./EditItem\";\nimport NewItem from \"./NewItem\";\nvar Stack = createStackNavigator();\n\nvar TodoApp = function (_Component) {\n  _inherits(TodoApp, _Component);\n\n  var _super = _createSuper(TodoApp);\n\n  function TodoApp(props) {\n    var _this;\n\n    _classCallCheck(this, TodoApp);\n\n    _this = _super.call(this, props);\n\n    _this.onReceiveItemToEdit = function (itemToEdit) {\n      _this.setState({\n        itemToEdit: itemToEdit\n      });\n    };\n\n    _this.state = {\n      itemToEdit: {}\n    };\n    return _this;\n  }\n\n  _createClass(TodoApp, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Stack.Navigator, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 7\n        }\n      }, React.createElement(Stack.Screen, {\n        name: \"View1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }\n      }, function (props) {\n        return React.createElement(View1, _extends({}, props, {\n          onReceiveItemToEdit: _this2.onReceiveItemToEdit,\n          userData: _this2.props.userData,\n          apiURI: _this2.props.apiURI,\n          onLogout: _this2.props.onLogout,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 22\n          }\n        }));\n      }), React.createElement(Stack.Screen, {\n        name: \"EditItem\",\n        options: {\n          title: 'Edit Item'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }\n      }, function (props) {\n        return React.createElement(EditItem, _extends({}, props, {\n          itemToEdit: _this2.state.itemToEdit,\n          userData: _this2.props.userData,\n          apiURI: _this2.props.apiURI,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 22\n          }\n        }));\n      }), React.createElement(Stack.Screen, {\n        name: \"NewItem\",\n        options: {\n          title: 'New Item'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }\n      }, function (props) {\n        return React.createElement(NewItem, _extends({}, props, {\n          userData: _this2.props.userData,\n          apiURI: _this2.props.apiURI,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 22\n          }\n        }));\n      }), React.createElement(Stack.Screen, {\n        name: \"Home\",\n        options: {\n          headerShown: false\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }\n      }, function (props) {\n        return React.createElement(Home, _extends({}, props, {\n          apiURI: _this2.props.apiURI,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 22\n          }\n        }));\n      }));\n    }\n  }]);\n\n  return TodoApp;\n}(Component);\n\nexport { TodoApp as default };","map":{"version":3,"sources":["/home/vic/reactnative/shop/components/TodoApp.js"],"names":["React","Component","createStackNavigator","View1","Home","EditItem","NewItem","Stack","TodoApp","props","onReceiveItemToEdit","itemToEdit","setState","state","userData","apiURI","onLogout","title","headerShown"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,OAAOC,KAAP;AACA,OAAOC,IAAP;AACA,OAAOC,QAAP;AACA,OAAOC,OAAP;AAEA,IAAMC,KAAK,GAAGL,oBAAoB,EAAlC;;IAEqBM,O;;;;;AAEnB,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAEjB,8BAAMA,KAAN;;AAFiB,UAQnBC,mBARmB,GAQG,UAACC,UAAD,EAAgB;AAAE,YAAKC,QAAL,CAAc;AAAED,QAAAA,UAAU,EAAVA;AAAF,OAAd;AAA+B,KARpD;;AAGjB,UAAKE,KAAL,GAAa;AACXF,MAAAA,UAAU,EAAE;AADD,KAAb;AAHiB;AAMlB;;;;WAID,kBAAS;AAAA;;AACP,aACE,oBAAC,KAAD,CAAO,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,UAAAF,KAAK;AAAA,eAAI,oBAAC,KAAD,eAAWA,KAAX;AAAkB,UAAA,mBAAmB,EAAI,MAAI,CAACC,mBAA9C;AAAmE,UAAA,QAAQ,EAAE,MAAI,CAACD,KAAL,CAAWK,QAAxF;AAAkG,UAAA,MAAM,EAAE,MAAI,CAACL,KAAL,CAAWM,MAArH;AAA6H,UAAA,QAAQ,EAAG,MAAI,CAACN,KAAL,CAAWO,QAAnJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAJ;AAAA,OADT,CADF,EAIE,oBAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,UAAnB;AAA8B,QAAA,OAAO,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,UAAAR,KAAK;AAAA,eAAI,oBAAC,QAAD,eAAcA,KAAd;AAAqB,UAAA,UAAU,EAAE,MAAI,CAACI,KAAL,CAAWF,UAA5C;AAAwD,UAAA,QAAQ,EAAE,MAAI,CAACF,KAAL,CAAWK,QAA7E;AAAuF,UAAA,MAAM,EAAE,MAAI,CAACL,KAAL,CAAWM,MAA1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAJ;AAAA,OADT,CAJF,EAOE,oBAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,SAAnB;AAA6B,QAAA,OAAO,EAAE;AAAEE,UAAAA,KAAK,EAAE;AAAT,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,UAAAR,KAAK;AAAA,eAAI,oBAAC,OAAD,eAAaA,KAAb;AAAoB,UAAA,QAAQ,EAAE,MAAI,CAACA,KAAL,CAAWK,QAAzC;AAAmD,UAAA,MAAM,EAAE,MAAI,CAACL,KAAL,CAAWM,MAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAJ;AAAA,OADT,CAPF,EAUE,oBAAC,KAAD,CAAO,MAAP;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,OAAO,EAAE;AACPG,UAAAA,WAAW,EAAE;AADN,SAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMI,UAAAT,KAAK;AAAA,eAAI,oBAAC,IAAD,eAAUA,KAAV;AAAiB,UAAA,MAAM,EAAG,MAAI,CAACA,KAAL,CAAWM,MAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAJ;AAAA,OANT,CAVF,CADF;AAqBD;;;;EAlCkCd,S;;SAAhBO,O","sourcesContent":["import React, { Component } from 'react'\nimport { createStackNavigator } from '@react-navigation/stack'\nimport View1 from './todoApp/View1'\nimport Home from '../screens/Home'\nimport EditItem from './EditItem'\nimport NewItem from './NewItem'\n\nconst Stack = createStackNavigator();\n\nexport default class TodoApp extends Component {\n\n  constructor(props) {\n\n    super(props);\n    this.state = {\n      itemToEdit: {}\n    }    \n  }\n\n  onReceiveItemToEdit = (itemToEdit) => { this.setState({ itemToEdit }) }\n\n  render() {\n    return (\n      <Stack.Navigator>\n        <Stack.Screen name=\"View1\">\n          { props => <View1 {...props} onReceiveItemToEdit = {this.onReceiveItemToEdit} userData={this.props.userData} apiURI={this.props.apiURI} onLogout={ this.props.onLogout }/>}\n        </Stack.Screen>\n        <Stack.Screen name=\"EditItem\" options={{ title: 'Edit Item' }} >    \n          { props => <EditItem {...props} itemToEdit={this.state.itemToEdit} userData={this.props.userData} apiURI={this.props.apiURI}/>}\n        </Stack.Screen>\n        <Stack.Screen name=\"NewItem\" options={{ title: 'New Item' }} >    \n          { props => <NewItem {...props} userData={this.props.userData} apiURI={this.props.apiURI}/>}\n        </Stack.Screen>\n        <Stack.Screen\n          name=\"Home\"\n          options={{\n            headerShown: false,\n          }}\n        >\n          { props => <Home {...props} apiURI={ this.props.apiURI }></Home>}\n        </Stack.Screen>\n      </Stack.Navigator>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}