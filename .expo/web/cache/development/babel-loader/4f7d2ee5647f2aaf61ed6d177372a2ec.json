{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/vic/reactnative/shop/components/Authentication/LoginScreen.js\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Base64 } from 'js-base64';\nimport global from \"../History/global\";\n\nvar LoginScreen = function LoginScreen(props) {\n  var _useState = useState(\"tester\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      userName = _useState2[0],\n      setUserName = _useState2[1];\n\n  var _useState3 = useState(\"testerpassword\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  function loginClick() {\n    fetch(props.apiURI + '/loginForJWT', {\n      method: 'GET',\n      headers: {\n        \"Authorization\": \"Basic \" + Base64.encode(userName + \":\" + password)\n      }\n    }).then(function (response) {\n      global.loginClick();\n\n      if (response.ok == false) {\n        throw new Error(\"HTTP Code \" + response.status + \" - \" + JSON.stringify(response.json()));\n      }\n\n      return response.json();\n    }).then(function (json) {\n      console.log(\"Login successful\");\n      console.log(\"Received following JSON\");\n      console.log(json);\n      props.onLoginReceiveJWT(json.token);\n    }).catch(function (error) {\n      console.log(\"Error message:\");\n      console.log(error.message);\n    });\n  }\n\n  var buttonText = styles.buttonText,\n      bigButton = styles.bigButton,\n      input = styles.input,\n      container = styles.container,\n      row1 = styles.row1,\n      controlStyle = styles.controlStyle,\n      iconStyle = styles.iconStyle,\n      titleStyle = styles.titleStyle,\n      signInStyle = styles.signInStyle,\n      signupStyle = styles.signupStyle,\n      iconStyle1 = styles.iconStyle1,\n      inactiveStyle = styles.inactiveStyle,\n      activeStyle = styles.activeStyle;\n  return React.createElement(View, {\n    style: container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    }\n  }, React.createElement(View, {\n    style: row1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    }\n  }, React.createElement(Text, {\n    style: titleStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    }\n  }, \"Second Hand Shop\")), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    }\n  }, React.createElement(TextInput, {\n    style: input,\n    value: userName,\n    placeholder: \"Enter your username\",\n    onChangeText: function onChangeText(value) {\n      return setUserName(value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    }\n  }), React.createElement(TextInput, {\n    style: input,\n    value: password,\n    placeholder: \"Enter your password\",\n    onChangeText: function onChangeText(value) {\n      return setPassword(value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: bigButton,\n    onPress: function onPress() {\n      return loginClick();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    }\n  }, React.createElement(Text, {\n    style: buttonText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    }\n  }, \"SIGN IN NOW\"))), React.createElement(View, {\n    style: controlStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: signInStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    }\n  }, React.createElement(Text, {\n    style: activeStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    }\n  }, \"SIGN IN\")), React.createElement(TouchableOpacity, {\n    style: signupStyle,\n    onPress: function onPress() {\n      return props.navigation.navigate('Signup');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    }\n  }, React.createElement(Text, {\n    style: inactiveStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    }\n  }, \"SIGN UP\"))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#FFA500',\n    padding: 20,\n    justifyContent: 'space-between'\n  },\n  inactiveStyle: {},\n  activeStyle: {\n    color: '#FFA500'\n  },\n  iconStyle: {\n    width: 50,\n    height: 50\n  },\n  row1: {\n    flexDirection: 'row',\n    justifyContent: 'center'\n  },\n  titleStyle: {\n    color: \"#FFF\",\n    fontFamily: 'Avenir',\n    fontSize: 30\n  },\n  iconStyle1: {\n    width: 40,\n    height: 40\n  },\n  controlStyle: {\n    flexDirection: 'row',\n    width: 300\n  },\n  signInStyle: {\n    backgroundColor: '#FFF',\n    alignItems: 'center',\n    flex: 1,\n    paddingVertical: 15,\n    borderBottomLeftRadius: 20,\n    borderTopLeftRadius: 20,\n    marginRight: 1,\n    marginLeft: 60\n  },\n  signupStyle: {\n    backgroundColor: '#FFF',\n    flex: 1,\n    marginLeft: 1,\n    alignItems: 'center',\n    paddingVertical: 15,\n    borderBottomRightRadius: 20,\n    borderTopRightRadius: 20\n  },\n  input: {\n    height: 50,\n    backgroundColor: '#FFF',\n    marginBottom: 10,\n    borderRadius: 20,\n    paddingLeft: 30\n  },\n  bigButton: {\n    height: 50,\n    borderRadius: 20,\n    borderWidth: 1,\n    borderColor: '#FFF',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  buttonText: {\n    fontFamily: 'Avenir',\n    color: '#FFF',\n    fontWeight: '400'\n  }\n});\nexport default LoginScreen;","map":{"version":3,"sources":["/home/vic/reactnative/shop/components/Authentication/LoginScreen.js"],"names":["React","useState","Base64","global","LoginScreen","props","userName","setUserName","password","setPassword","loginClick","fetch","apiURI","method","headers","encode","then","response","ok","Error","status","JSON","stringify","json","console","log","onLoginReceiveJWT","token","catch","error","message","buttonText","styles","bigButton","input","container","row1","controlStyle","iconStyle","titleStyle","signInStyle","signupStyle","iconStyle1","inactiveStyle","activeStyle","value","navigation","navigate","StyleSheet","create","flex","backgroundColor","padding","justifyContent","color","width","height","flexDirection","fontFamily","fontSize","alignItems","paddingVertical","borderBottomLeftRadius","borderTopLeftRadius","marginRight","marginLeft","borderBottomRightRadius","borderTopRightRadius","marginBottom","borderRadius","paddingLeft","borderWidth","borderColor","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { View, Text, TextInput, TouchableHighlight, Button, StyleSheet, TouchableOpacity, Image } from 'react-native'\nimport { Base64 } from 'js-base64'\n\nimport global from '../History/global'\n\nconst LoginScreen = (props) => {\n  const [userName, setUserName] = useState(\"tester\");\n  const [password, setPassword] = useState(\"testerpassword\");\n\n  function loginClick() {\n    fetch(props.apiURI + '/loginForJWT', {\n      method: 'GET',\n      headers: {\n        \"Authorization\": \"Basic \" + Base64.encode(userName + \":\" + password)\n      }\n    })\n      .then(response => {\n        global.loginClick();\n        if (response.ok == false) {\n          throw new Error(\"HTTP Code \" + response.status + \" - \" + JSON.stringify(response.json()));\n        }\n        return response.json();\n\n      })\n      .then(json => {\n        console.log(\"Login successful\")\n        console.log(\"Received following JSON\");\n        console.log(json);\n\n        props.onLoginReceiveJWT(json.token);\n      })\n      .catch(error => {\n        console.log(\"Error message:\")\n        console.log(error.message)\n      });\n  }\n\n\n\n  const { buttonText, bigButton, input, container, row1, controlStyle, iconStyle, titleStyle, signInStyle, signupStyle, iconStyle1, inactiveStyle, activeStyle } = styles\n\n  return (\n    <View style={container}>\n      <View style={row1}>\n        <Text style={titleStyle}>Second Hand Shop</Text>\n      </View>\n      <View>\n        <TextInput\n          style={input}\n          value={userName}\n          placeholder=\"Enter your username\"\n          onChangeText={value => setUserName(value)}\n        />\n        <TextInput\n          style={input}\n          value={password}\n          placeholder=\"Enter your password\"\n          onChangeText={value => setPassword(value)}\n        />\n        <TouchableOpacity style={bigButton} onPress={() => loginClick()} >\n          <Text style={buttonText}>SIGN IN NOW</Text>\n        </TouchableOpacity>\n      </View>\n      <View style={controlStyle}  >\n        <TouchableOpacity style={signInStyle}>\n          <Text style={activeStyle}>SIGN IN</Text>\n        </TouchableOpacity>\n        <TouchableOpacity style={signupStyle} onPress={() => props.navigation.navigate('Signup')}>\n          <Text style={inactiveStyle}>SIGN UP</Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#FFA500',\n    padding: 20,\n    justifyContent: 'space-between'\n  },\n  inactiveStyle: {\n\n  },\n  activeStyle: {\n    color: '#FFA500'\n  },\n  iconStyle: { width: 50, height: 50 },\n  row1: { flexDirection: 'row', justifyContent: 'center' },\n  titleStyle: { color: \"#FFF\", fontFamily: 'Avenir', fontSize: 30, },\n  iconStyle1: { width: 40, height: 40 },\n  controlStyle: {\n    flexDirection: 'row',\n    width: 300,\n  },\n  signInStyle: {\n    backgroundColor: '#FFF',\n    alignItems: 'center',\n    flex: 1,\n    paddingVertical: 15,\n    borderBottomLeftRadius: 20,\n    borderTopLeftRadius: 20,\n    marginRight: 1,\n    marginLeft: 60\n  },\n  signupStyle: {\n    backgroundColor: '#FFF',\n    flex: 1,\n    marginLeft: 1,\n    alignItems: 'center',\n    paddingVertical: 15,\n    borderBottomRightRadius: 20,\n    borderTopRightRadius: 20\n  },\n  input: {\n    height: 50,\n    backgroundColor: '#FFF',\n    marginBottom: 10,\n    borderRadius: 20,\n    paddingLeft: 30\n  },\n  bigButton: {\n    height: 50,\n    borderRadius: 20,\n    borderWidth: 1,\n    borderColor: '#FFF',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  buttonText: {\n    fontFamily: 'Avenir',\n    color: '#FFF',\n    fontWeight: '400'\n  }\n});\n\nexport default LoginScreen\n"]},"metadata":{},"sourceType":"module"}