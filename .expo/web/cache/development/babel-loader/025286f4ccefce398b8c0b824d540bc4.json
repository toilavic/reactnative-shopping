{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/vic/reactnative/shop/components/LoginScreen.js\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Base64 } from 'js-base64';\n\nvar LoginScreen = function LoginScreen(props) {\n  var _useState = useState(\"testvic\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      userName = _useState2[0],\n      setUserName = _useState2[1];\n\n  var _useState3 = useState(\"testvic\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  function loginClick() {\n    fetch(props.apiURI + '/login', {\n      method: 'POST',\n      body: JSON.stringify({\n        username: userName,\n        password: password\n      }),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\"\n      }\n    }).then(function (response) {\n      if (response.ok == false) {\n        throw new Error(\"HTTP Code \" + response.status + \" - \" + JSON.stringify(response.json()));\n      }\n\n      return response.json();\n    }).then(function (json) {\n      console.log(\"Login successful\");\n      console.log(\"Received following JSON\");\n      props.onLoginReceiveJWT(json.token);\n    }).catch(function (error) {\n      console.log(\"Error message:\");\n      console.log(error.message);\n    });\n  }\n\n  return React.createElement(View, {\n    style: styles.screen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.header,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, \"User Login\"), React.createElement(Text, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \"Username\"), React.createElement(TextInput, {\n    style: styles.input,\n    value: userName,\n    placeholder: \"johndoe\",\n    onChangeText: function onChangeText(value) {\n      return setUserName(value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, \"Password\"), React.createElement(TextInput, {\n    style: styles.input,\n    value: password,\n    placeholder: \"password\",\n    onChangeText: function onChangeText(value) {\n      return setPassword(value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), React.createElement(TouchableHighlight, {\n    onPress: function onPress() {\n      return loginClick();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.primaryButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.primaryButtonText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, \"Buy items without user account\"))), React.createElement(TouchableHighlight, {\n    onPress: function onPress() {\n      return loginClick();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.primaryButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.primaryButtonText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, \"Login\"))), React.createElement(Button, {\n    title: \"Sign up\",\n    color: \"#000000\",\n    onPress: function onPress() {\n      return props.navigation.navigate('Signup');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  screen: {\n    backgroundColor: 'rgb(51, 153, 255)',\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  header: {\n    fontSize: 40,\n    marginBottom: 20,\n    color: 'white'\n  },\n  text: {\n    fontSize: 20,\n    color: 'white'\n  },\n  input: {\n    borderWidth: 1,\n    borderRadius: 20,\n    height: 40,\n    width: '90%',\n    backgroundColor: 'white',\n    textAlign: 'center',\n    fontSize: 18,\n    marginTop: 5,\n    marginBottom: 20\n  },\n  primaryButton: {\n    backgroundColor: 'rgb(0, 153, 51)',\n    height: 60,\n    width: 200,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderColor: 'black',\n    borderWidth: 2,\n    marginTop: 20,\n    marginBottom: 10\n  },\n  primaryButtonText: {\n    color: 'white',\n    fontSize: 20\n  }\n});\nexport default LoginScreen;","map":{"version":3,"sources":["/home/vic/reactnative/shop/components/LoginScreen.js"],"names":["React","useState","Base64","LoginScreen","props","userName","setUserName","password","setPassword","loginClick","fetch","apiURI","method","body","JSON","stringify","username","headers","then","response","ok","Error","status","json","console","log","onLoginReceiveJWT","token","catch","error","message","styles","screen","header","text","input","value","primaryButton","primaryButtonText","navigation","navigate","StyleSheet","create","backgroundColor","flex","justifyContent","alignItems","fontSize","marginBottom","color","borderWidth","borderRadius","height","width","textAlign","marginTop","borderColor"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;;;AAEA,SAASC,MAAT,QAAuB,WAAvB;;AAIA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AAAA,kBACGH,QAAQ,CAAC,SAAD,CADX;AAAA;AAAA,MACtBI,QADsB;AAAA,MACZC,WADY;;AAAA,mBAEGL,QAAQ,CAAC,SAAD,CAFX;AAAA;AAAA,MAEtBM,QAFsB;AAAA,MAEZC,WAFY;;AAI7B,WAASC,UAAT,GAAsB;AACpBC,IAAAA,KAAK,CAACN,KAAK,CAACO,MAAN,GAAe,QAAhB,EAA0B;AAC7BC,MAAAA,MAAM,EAAE,MADqB;AAK7BC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,QAAQ,EAAEX,QADS;AAEnBE,QAAAA,QAAQ,EAAEA;AAFS,OAAf,CALuB;AAS7BU,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAToB,KAA1B,CAAL,CAaCC,IAbD,CAaM,UAAAC,QAAQ,EAAI;AAChB,UAAIA,QAAQ,CAACC,EAAT,IAAe,KAAnB,EAA0B;AACxB,cAAM,IAAIC,KAAJ,CAAU,eAAeF,QAAQ,CAACG,MAAxB,GAAiC,KAAjC,GAAyCR,IAAI,CAACC,SAAL,CAAeI,QAAQ,CAACI,IAAT,EAAf,CAAnD,CAAN;AACD;;AACD,aAAOJ,QAAQ,CAACI,IAAT,EAAP;AACD,KAlBD,EAmBCL,IAnBD,CAmBM,UAAAK,IAAI,EAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACArB,MAAAA,KAAK,CAACsB,iBAAN,CAAwBH,IAAI,CAACI,KAA7B;AACD,KAvBD,EAwBCC,KAxBD,CAwBO,UAAAC,KAAK,EAAI;AACdL,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYI,KAAK,CAACC,OAAlB;AACD,KA3BD;AA4BD;;AAED,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAGC,MAAM,CAACC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAGD,MAAM,CAACE,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAGF,MAAM,CAACG,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAGH,MAAM,CAACI,KADjB;AAEE,IAAA,KAAK,EAAG9B,QAFV;AAGE,IAAA,WAAW,EAAC,SAHd;AAIE,IAAA,YAAY,EAAG,sBAAA+B,KAAK;AAAA,aAAI9B,WAAW,CAAC8B,KAAD,CAAf;AAAA,KAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EASE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAGL,MAAM,CAACG,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF,EAUE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAGH,MAAM,CAACI,KADjB;AAEE,IAAA,KAAK,EAAG5B,QAFV;AAGE,IAAA,WAAW,EAAC,UAHd;AAIE,IAAA,YAAY,EAAG,sBAAA6B,KAAK;AAAA,aAAI5B,WAAW,CAAC4B,KAAD,CAAf;AAAA,KAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,EAgBE,oBAAC,kBAAD;AAAoB,IAAA,OAAO,EAAG;AAAA,aAAM3B,UAAU,EAAhB;AAAA,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAGsB,MAAM,CAACM,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAGN,MAAM,CAACO,iBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADF,CADF,CAhBF,EAqBE,oBAAC,kBAAD;AAAoB,IAAA,OAAO,EAAG;AAAA,aAAM7B,UAAU,EAAhB;AAAA,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAGsB,MAAM,CAACM,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAGN,MAAM,CAACO,iBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CADF,CArBF,EA0BE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,KAAK,EAAC,SAA9B;AAAwC,IAAA,OAAO,EAAG;AAAA,aAAMlC,KAAK,CAACmC,UAAN,CAAiBC,QAAjB,CAA0B,QAA1B,CAAN;AAAA,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1BF,CADF;AA8BD,CAjED;;AAmEA,IAAMT,MAAM,GAAGU,UAAU,CAACC,MAAX,CAAkB;AAC/BV,EAAAA,MAAM,EAAE;AACNW,IAAAA,eAAe,EAAE,mBADX;AAENC,IAAAA,IAAI,EAAE,CAFA;AAGNC,IAAAA,cAAc,EAAE,QAHV;AAINC,IAAAA,UAAU,EAAE;AAJN,GADuB;AAO/Bb,EAAAA,MAAM,EAAE;AACNc,IAAAA,QAAQ,EAAE,EADJ;AAENC,IAAAA,YAAY,EAAE,EAFR;AAGNC,IAAAA,KAAK,EAAE;AAHD,GAPuB;AAY/Bf,EAAAA,IAAI,EAAE;AACJa,IAAAA,QAAQ,EAAE,EADN;AAEJE,IAAAA,KAAK,EAAE;AAFH,GAZyB;AAgB/Bd,EAAAA,KAAK,EAAE;AACLe,IAAAA,WAAW,EAAE,CADR;AAELC,IAAAA,YAAY,EAAE,EAFT;AAGLC,IAAAA,MAAM,EAAE,EAHH;AAILC,IAAAA,KAAK,EAAE,KAJF;AAKLV,IAAAA,eAAe,EAAE,OALZ;AAMLW,IAAAA,SAAS,EAAE,QANN;AAOLP,IAAAA,QAAQ,EAAE,EAPL;AAQLQ,IAAAA,SAAS,EAAE,CARN;AASLP,IAAAA,YAAY,EAAE;AATT,GAhBwB;AA2B/BX,EAAAA,aAAa,EAAE;AACbM,IAAAA,eAAe,EAAE,iBADJ;AAEbS,IAAAA,MAAM,EAAE,EAFK;AAGbC,IAAAA,KAAK,EAAE,GAHM;AAIbR,IAAAA,cAAc,EAAE,QAJH;AAKbC,IAAAA,UAAU,EAAE,QALC;AAMbU,IAAAA,WAAW,EAAE,OANA;AAObN,IAAAA,WAAW,EAAE,CAPA;AAQbK,IAAAA,SAAS,EAAE,EARE;AASbP,IAAAA,YAAY,EAAE;AATD,GA3BgB;AAsC/BV,EAAAA,iBAAiB,EAAE;AACjBW,IAAAA,KAAK,EAAE,OADU;AAEjBF,IAAAA,QAAQ,EAAE;AAFO;AAtCY,CAAlB,CAAf;AA6CA,eAAe5C,WAAf","sourcesContent":["import React, { useState } from 'react'\nimport { View, Text, TextInput, TouchableHighlight, Button, StyleSheet } from 'react-native'\nimport { Base64 } from 'js-base64'\n\n\n\nconst LoginScreen = (props) => {\n  const [userName, setUserName] = useState(\"testvic\");\n  const [password, setPassword] = useState(\"testvic\");\n\n  function loginClick() {\n    fetch(props.apiURI + '/login', {\n      method: 'POST',\n      // headers: {\n      //   \"Authorization\": \"Basic \" + Base64.encode(userName + \":\" + password)\n      // }\n      body: JSON.stringify({\n        username: userName,\n        password: password\n      }),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\"\n      }\n    })\n    .then(response => {\n      if (response.ok == false) {\n        throw new Error(\"HTTP Code \" + response.status + \" - \" + JSON.stringify(response.json()));\n      }\n      return response.json();\n    })\n    .then(json => {\n      console.log(\"Login successful\")\n      console.log(\"Received following JSON\");\n      props.onLoginReceiveJWT(json.token);\n    })\n    .catch(error => {\n      console.log(\"Error message:\")\n      console.log(error.message)\n    });\n  }\n\n  return (\n    <View style={ styles.screen }>\n      <Text style={ styles.header }>User Login</Text>\n      <Text style={ styles.text }>Username</Text>\n      <TextInput\n        style={ styles.input }\n        value={ userName }\n        placeholder=\"johndoe\"\n        onChangeText={ value => setUserName(value)}\n      />\n      <Text style={ styles.text }>Password</Text>\n      <TextInput\n        style={ styles.input }\n        value={ password }\n        placeholder=\"password\"\n        onChangeText={ value => setPassword(value)}\n      />\n      <TouchableHighlight onPress={ () => loginClick() }>\n        <View style={ styles.primaryButton }>\n          <Text style={ styles.primaryButtonText }>Buy items without user account</Text>\n        </View>\n      </TouchableHighlight>\n      <TouchableHighlight onPress={ () => loginClick() }>\n        <View style={ styles.primaryButton }>\n          <Text style={ styles.primaryButtonText }>Login</Text>\n        </View>\n      </TouchableHighlight>\n      <Button title=\"Sign up\" color=\"#000000\" onPress={ () => props.navigation.navigate('Signup') } />\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  screen: {\n    backgroundColor: 'rgb(51, 153, 255)',\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  header: {\n    fontSize: 40,\n    marginBottom: 20,\n    color: 'white'\n  },\n  text: {\n    fontSize: 20,\n    color: 'white'\n  },\n  input: {\n    borderWidth: 1,\n    borderRadius: 20,\n    height: 40,\n    width: '90%',\n    backgroundColor: 'white',\n    textAlign: 'center',\n    fontSize: 18,\n    marginTop: 5,\n    marginBottom: 20\n  },\n  primaryButton: {\n    backgroundColor: 'rgb(0, 153, 51)',\n    height: 60,\n    width: 200,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderColor: 'black',\n    borderWidth: 2,\n    marginTop: 20,\n    marginBottom: 10\n  },\n  primaryButtonText: {\n    color: 'white',\n    fontSize: 20\n\n  }\n});\n\nexport default LoginScreen\n"]},"metadata":{},"sourceType":"module"}