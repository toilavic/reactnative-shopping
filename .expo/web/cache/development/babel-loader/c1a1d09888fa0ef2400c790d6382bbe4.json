{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/vic/reactnative/shop/components/TodoApp.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport View1 from \"./todoApp/View1\";\nimport EditItem from \"./EditItem\";\nvar Stack = createStackNavigator();\n\nvar TodoApp = function (_Component) {\n  _inherits(TodoApp, _Component);\n\n  var _super = _createSuper(TodoApp);\n\n  function TodoApp(props) {\n    var _this;\n\n    _classCallCheck(this, TodoApp);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      todos: []\n    };\n    return _this;\n  }\n\n  _createClass(TodoApp, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Stack.Navigator, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 7\n        }\n      }, React.createElement(Stack.Screen, {\n        name: \"View1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 9\n        }\n      }, function (props) {\n        return React.createElement(View1, _extends({}, props, {\n          userData: _this2.props.userData,\n          apiURI: _this2.props.apiURI,\n          onLogout: _this2.props.onLogout,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 22\n          }\n        }));\n      }), React.createElement(Stack.Screen, {\n        name: \"EditItem\",\n        options: {\n          title: 'Edit Item'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }\n      }, function (props) {\n        return React.createElement(EditItem, _extends({}, props, {\n          todos: _this2.state.todos,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 22\n          }\n        }));\n      }));\n    }\n  }]);\n\n  return TodoApp;\n}(Component);\n\nexport { TodoApp as default };","map":{"version":3,"sources":["/home/vic/reactnative/shop/components/TodoApp.js"],"names":["React","Component","createStackNavigator","View1","EditItem","Stack","TodoApp","props","state","todos","userData","apiURI","onLogout","title"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,OAAOC,KAAP;AACA,OAAOC,QAAP;AAEA,IAAMC,KAAK,GAAGH,oBAAoB,EAAlC;;IAEqBI,O;;;;;AAEnB,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAEjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAHiB;AAMlB;;;;WAGD,kBAAS;AAAA;;AACP,aACE,oBAAC,KAAD,CAAO,SAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,UAAAF,KAAK;AAAA,eAAI,oBAAC,KAAD,eAAWA,KAAX;AAAkB,UAAA,QAAQ,EAAE,MAAI,CAACA,KAAL,CAAWG,QAAvC;AAAiD,UAAA,MAAM,EAAE,MAAI,CAACH,KAAL,CAAWI,MAApE;AAA4E,UAAA,QAAQ,EAAG,MAAI,CAACJ,KAAL,CAAWK,QAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAJ;AAAA,OADT,CADF,EAIE,oBAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,UAAnB;AAA8B,QAAA,OAAO,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,UAAAN,KAAK;AAAA,eAAI,oBAAC,QAAD,eAAcA,KAAd;AAAqB,UAAA,KAAK,EAAG,MAAI,CAACC,KAAL,CAAWC,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAJ;AAAA,OADT,CAJF,CADF;AAUD;;;;EAtBkCR,S;;SAAhBK,O","sourcesContent":["import React, { Component } from 'react'\nimport { createStackNavigator } from '@react-navigation/stack'\nimport View1 from './todoApp/View1'\nimport EditItem from './EditItem'\n\nconst Stack = createStackNavigator();\n\nexport default class TodoApp extends Component {\n\n  constructor(props) {\n\n    super(props);\n    this.state = {\n      todos: []\n    }    \n  }\n\n  \n  render() {\n    return (\n      <Stack.Navigator>\n        <Stack.Screen name=\"View1\">\n          { props => <View1 {...props} userData={this.props.userData} apiURI={this.props.apiURI} onLogout={ this.props.onLogout }/>}\n        </Stack.Screen>\n        <Stack.Screen name=\"EditItem\" options={{ title: 'Edit Item' }} >    \n          { props => <EditItem {...props} todos={ this.state.todos }/>}\n        </Stack.Screen>\n      </Stack.Navigator>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}