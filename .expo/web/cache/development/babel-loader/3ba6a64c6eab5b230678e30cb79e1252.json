{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/home/vic/reactnative/shop/components/Authentication/TodoApp.js\";\nimport React, { Component } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { createStackNavigator } from '@react-navigation/stack';\nimport View1 from \"./todoApp/View1\";\nimport AddPost from \"./todoApp/AddPost\";\nimport EditPost from \"./todoApp/EditPost\";\nimport Motify from \"./todoApp/Motify\";\nvar Stack = createStackNavigator();\n\nvar TodoApp = function (_Component) {\n  _inherits(TodoApp, _Component);\n\n  function TodoApp(props) {\n    var _this;\n\n    _classCallCheck(this, TodoApp);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TodoApp).call(this, props));\n\n    _this.onTodoAdd = function (description, dueDate) {\n      fetch(_this.props.apiURI + '/post', {\n        method: 'POST',\n        headers: {\n          \"Authorization\": \"Bearer \" + _this.props.jwt,\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          description: description,\n          dueDate: dueDate\n        })\n      }).then(function (response) {\n        if (response.ok == false) {\n          throw new Error(\"HTTP Code \" + response.status + \" - \" + JSON.stringify(response.json()));\n        }\n\n        return response.json();\n      }).then(function (json) {\n        console.log(\"Todos POST successful\");\n        console.log(\"Received following JSON\");\n        console.log(json);\n      }).catch(function (error) {\n        console.log(\"Error message:\");\n        console.log(error.message);\n      });\n    };\n\n    _this.state = {\n      todos: []\n    };\n    return _this;\n  }\n\n  _createClass(TodoApp, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      console.log('getting todos');\n      fetch(this.props.apiURI + '/jwtProtectedResource', {\n        method: 'GET',\n        headers: {\n          \"Authorization\": \"Bearer \" + this.props.jwt\n        }\n      }).then(function (response) {\n        if (response.ok == false) {\n          throw new Error(\"HTTP Code \" + response.status + \" - \" + JSON.stringify(response.json()));\n        }\n\n        return response.json();\n      }).then(function (json) {\n        console.log(\"Todos GET successful\");\n        console.log(\"Received following JSON\");\n        console.log(json.user.email);\n\n        _this2.setState({\n          todos: json.user.email\n        });\n      }).catch(function (error) {\n        console.log(\"Error message:\");\n        console.log(error.message);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(Stack.Navigator, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        }\n      }, React.createElement(Stack.Screen, {\n        options: {\n          headerShown: false\n        },\n        name: \"View1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        }\n      }, function (props) {\n        return React.createElement(View1, _extends({}, props, {\n          onLogout: _this3.props.onLogout,\n          user: _this3.props.user,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          }\n        }));\n      }), React.createElement(Stack.Screen, {\n        name: \"AddPost\",\n        options: {\n          headerShown: false\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        }\n      }, function (props) {\n        return React.createElement(AddPost, _extends({}, props, {\n          todos: _this3.state.todos,\n          onTodoAdd: _this3.onTodoAdd,\n          jwt: _this3.props.jwt,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          }\n        }));\n      }), React.createElement(Stack.Screen, {\n        name: \"EditPost\",\n        options: {\n          headerShown: false\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        }\n      }, function (props) {\n        return React.createElement(EditPost, _extends({}, props, {\n          todos: _this3.state.todos,\n          todos: _this3.state.todos,\n          onTodoAdd: _this3.EditPost,\n          jwt: _this3.props.jwt,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          }\n        }));\n      }), React.createElement(Stack.Screen, {\n        name: \"Motify\",\n        options: {\n          headerShown: false\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        }\n      }, function (props) {\n        return React.createElement(Motify, _extends({}, props, {\n          todos: _this3.state.todos,\n          onTodoAdd: _this3.EditPost,\n          jwt: _this3.props.jwt,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          }\n        }));\n      }));\n    }\n  }]);\n\n  return TodoApp;\n}(Component);\n\nexport { TodoApp as default };","map":{"version":3,"sources":["/home/vic/reactnative/shop/components/Authentication/TodoApp.js"],"names":["React","Component","createStackNavigator","View1","AddPost","EditPost","Motify","Stack","TodoApp","props","onTodoAdd","description","dueDate","fetch","apiURI","method","headers","jwt","body","JSON","stringify","then","response","ok","Error","status","json","console","log","catch","error","message","state","todos","user","email","setState","headerShown","onLogout"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Text, View } from 'react-native'\nimport { createStackNavigator } from '@react-navigation/stack'\nimport View1 from './todoApp/View1'\nimport AddPost from './todoApp/AddPost'\nimport EditPost from './todoApp/EditPost'\nimport Motify from './todoApp/Motify'\n\n\nconst Stack = createStackNavigator();\n\nexport default class TodoApp extends Component {\n\n  constructor(props) {\n\n    super(props);\n    this.state = {\n      todos: []\n    }\n  }\n\n  componentDidMount() {\n    console.log('getting todos');\n    fetch(this.props.apiURI + '/jwtProtectedResource', {\n      method: 'GET',\n      headers: {\n        \"Authorization\": \"Bearer \" + this.props.jwt\n      }\n    })\n      .then(response => {\n        if (response.ok == false) {\n          throw new Error(\"HTTP Code \" + response.status + \" - \" + JSON.stringify(response.json()));\n        }\n        return response.json();\n      })\n      .then(json => {\n        console.log(\"Todos GET successful\")\n        console.log(\"Received following JSON\");\n        console.log(json.user.email);\n\n        this.setState({ todos: json.user.email })\n      })\n      .catch(error => {\n        console.log(\"Error message:\")\n        console.log(error.message)\n      });\n  }\n\n\n  onTodoAdd = (description, dueDate) => {\n    fetch(this.props.apiURI + '/post', {\n      method: 'POST',\n      headers: {\n        \"Authorization\": \"Bearer \" + this.props.jwt,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({ description, dueDate })\n    })\n      .then(response => {\n        if (response.ok == false) {\n          throw new Error(\"HTTP Code \" + response.status + \" - \" + JSON.stringify(response.json()));\n        }\n        return response.json();\n      })\n      .then(json => {\n        console.log(\"Todos POST successful\")\n        console.log(\"Received following JSON\");\n        console.log(json);\n      })\n      .catch(error => {\n        console.log(\"Error message:\")\n        console.log(error.message)\n      });\n  }\n\n\n\n  render() {\n    return (\n      <Stack.Navigator>\n        <Stack.Screen options={{\n          headerShown: false,\n        }} name=\"View1\">\n          {props => <View1 {...props} onLogout={this.props.onLogout} user={this.props.user}/>}\n        </Stack.Screen>\n        <Stack.Screen name=\"AddPost\" \n          options={{\n            headerShown: false,\n          }} >\n          {props => <AddPost {...props} todos={this.state.todos} onTodoAdd={this.onTodoAdd} jwt={this.props.jwt} />}\n        </Stack.Screen>\n        <Stack.Screen name=\"EditPost\" \n          options={{\n            headerShown: false,\n          }} >\n          {props => <EditPost {...props} todos={this.state.todos} todos={this.state.todos} onTodoAdd={this.EditPost} jwt={this.props.jwt} />}\n        </Stack.Screen>\n        <Stack.Screen name=\"Motify\" \n          options={{\n            headerShown: false,\n          }} >\n          {props => <Motify {...props} todos={this.state.todos} onTodoAdd={this.EditPost} jwt={this.props.jwt} />}\n        </Stack.Screen>\n      </Stack.Navigator>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}