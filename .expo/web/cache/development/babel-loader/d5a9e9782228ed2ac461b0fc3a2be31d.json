{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/vic/reactnative/shop/components/EditItem.js\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport axios from 'axios';\n\nvar EditItem = function EditItem(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      email = _useState6[0],\n      setEmail = _useState6[1];\n\n  function onEdit() {\n    fetch(props.apiURI + '/users', {\n      method: 'POST',\n      body: JSON.stringify({\n        username: username,\n        name: email,\n        password: password\n      }),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\"\n      }\n    }).then(function (response) {\n      if (response.ok == false) {\n        throw new Error(\"HTTP Code \" + response.status + \" - \" + JSON.stringify(response.json()));\n      }\n\n      return response.json();\n    }).then(function (json) {\n      props.navigation.reset({\n        index: 0,\n        routes: [{\n          name: 'SignupCompleted'\n        }]\n      });\n    }).catch(function (error) {\n      console.log(\"Error message:\");\n      console.log(error.message);\n    });\n  }\n\n  useEffect(function () {\n    console.log(props);\n  }, []);\n  var item = props.itemToEdit;\n  return React.createElement(View, {\n    style: styles.screen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"Title\"), React.createElement(TextInput, {\n    style: styles.input,\n    value: username,\n    placeholder: item.title,\n    onChangeText: function onChangeText(value) {\n      return setUsername(value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, \"Description\"), React.createElement(TextInput, {\n    style: styles.input,\n    value: email,\n    placeholder: item.description,\n    onChangeText: function onChangeText(value) {\n      return setEmail(value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, \"Category\"), React.createElement(TextInput, {\n    style: styles.input,\n    value: password,\n    placeholder: \"password\",\n    onChangeText: function onChangeText(value) {\n      return setPassword(value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, \"Location\"), React.createElement(TextInput, {\n    style: styles.input,\n    value: password,\n    placeholder: item.location.country,\n    onChangeText: function onChangeText(value) {\n      return setPassword(value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    value: password,\n    placeholder: item.location.city,\n    onChangeText: function onChangeText(value) {\n      return setPassword(value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, \"Images link\"), React.createElement(TextInput, {\n    style: styles.input,\n    value: password,\n    placeholder: \"Link to images\",\n    onChangeText: function onChangeText(value) {\n      return setPassword(value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, \"Price\"), React.createElement(TextInput, {\n    style: styles.input,\n    value: password,\n    placeholder: \"$\",\n    onChangeText: function onChangeText(value) {\n      return setPassword(value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, \"Delivery Type\"), React.createElement(TextInput, {\n    style: styles.input,\n    value: password,\n    placeholder: item.deliveryType,\n    onChangeText: function onChangeText(value) {\n      return setPassword(value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }), React.createElement(TouchableHighlight, {\n    onPress: function onPress() {\n      return onEdit();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: styles.primaryButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.primaryButtonText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  }, \"Sign up\"))), React.createElement(Button, {\n    title: \"Cancel\",\n    color: \"#000000\",\n    onPress: function onPress() {\n      return props.navigation.reset({\n        index: 0,\n        routes: [{\n          name: 'TodoApp'\n        }]\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  screen: {\n    backgroundColor: 'rgb(227, 178, 0)',\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: -30\n  },\n  text: {\n    fontSize: 20,\n    color: 'white'\n  },\n  input: {\n    borderWidth: 1,\n    borderRadius: 20,\n    height: 32,\n    width: '90%',\n    backgroundColor: 'white',\n    textAlign: 'center',\n    fontSize: 16,\n    marginTop: 5,\n    marginBottom: 25\n  },\n  primaryButton: {\n    backgroundColor: 'rgb(0, 153, 51)',\n    height: 40,\n    width: 150,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderColor: 'black',\n    borderWidth: 2,\n    marginTop: 5,\n    marginBottom: 5\n  },\n  primaryButtonText: {\n    color: 'white',\n    fontSize: 20\n  }\n});\nexport default EditItem;","map":{"version":3,"sources":["/home/vic/reactnative/shop/components/EditItem.js"],"names":["React","useEffect","useState","axios","EditItem","props","username","setUsername","password","setPassword","email","setEmail","onEdit","fetch","apiURI","method","body","JSON","stringify","name","headers","then","response","ok","Error","status","json","navigation","reset","index","routes","catch","error","console","log","message","item","itemToEdit","styles","screen","input","title","value","description","location","country","city","deliveryType","primaryButton","primaryButtonText","StyleSheet","create","backgroundColor","flex","justifyContent","alignItems","marginTop","text","fontSize","color","borderWidth","borderRadius","height","width","textAlign","marginBottom","borderColor"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { View, Text, StyleSheet, Button, TextInput, TouchableHighlight } from 'react-native'\nimport axios from 'axios';\n\nconst EditItem = (props) => {\n\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n\n    function onEdit() {\n        fetch(props.apiURI + '/users', {\n            method: 'POST',\n            body: JSON.stringify({\n                username: username,\n                name: email,\n                password: password\n            }),\n            headers: {\n                \"Content-type\": \"application/json; charset=UTF-8\"\n            }\n        })\n            .then(response => {\n                if (response.ok == false) {\n                    throw new Error(\"HTTP Code \" + response.status + \" - \" + JSON.stringify(response.json()));\n                }\n                return response.json();\n            })\n            .then(json => {\n                props.navigation.reset({\n                    index: 0,\n                    routes: [{ name: 'SignupCompleted' }],\n                })\n            })\n            .catch(error => {\n                console.log(\"Error message:\")\n                console.log(error.message)\n            });\n    }\n\n    useEffect(() => {\n        console.log(props)\n    }, []);\n    const item = props.itemToEdit\n    return (\n        <View style={styles.screen}>\n            <Text>Title</Text>\n            <TextInput\n                style={styles.input}\n                value={username}\n                placeholder={item.title}\n                onChangeText={value => setUsername(value)}\n            />\n            <Text>Description</Text>\n            <TextInput\n                style={styles.input}\n                value={email}\n                placeholder={item.description}\n                onChangeText={value => setEmail(value)}\n            />\n            <Text>Category</Text>\n            <TextInput\n                style={styles.input}\n                value={password}\n                placeholder=\"password\"\n                onChangeText={value => setPassword(value)}\n            />\n            <Text>Location</Text>\n            <TextInput\n                style={styles.input}\n                value={password}\n                placeholder={item.location.country}\n                onChangeText={value => setPassword(value)}\n            />\n            <TextInput\n                style={styles.input}\n                value={password}\n                placeholder={item.location.city}\n                onChangeText={value => setPassword(value)}\n            />\n            <Text>Images link</Text>\n            <TextInput\n                style={styles.input}\n                value={password}\n                placeholder='Link to images'\n                onChangeText={value => setPassword(value)}\n            />\n            <Text>Price</Text>\n            <TextInput\n                style={styles.input}\n                value={password}\n                placeholder='$'\n                onChangeText={value => setPassword(value)}\n            />\n            <Text>Delivery Type</Text>\n            <TextInput\n                style={styles.input}\n                value={password}\n                placeholder={item.deliveryType}\n                onChangeText={value => setPassword(value)}\n            />\n            <TouchableHighlight onPress={() => onEdit()}>\n                <View style={styles.primaryButton}>\n                    <Text style={styles.primaryButtonText}>Sign up</Text>\n                </View>\n            </TouchableHighlight>\n            <Button\n                title=\"Cancel\"\n                color=\"#000000\"\n                onPress={\n                    () => props.navigation.reset({\n                        index: 0,\n                        routes: [{ name: 'TodoApp' }],\n                    })\n                } />\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    screen: {\n        backgroundColor: 'rgb(227, 178, 0)',\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginTop: -30\n    },\n    text: {\n        fontSize: 20,\n        color: 'white'\n    },\n    input: {\n        borderWidth: 1,\n        borderRadius: 20,\n        height: 32,\n        width: '90%',\n        backgroundColor: 'white',\n        textAlign: 'center',\n        fontSize: 16,\n        marginTop: 5,\n        marginBottom: 25\n    },\n    primaryButton: {\n        backgroundColor: 'rgb(0, 153, 51)',\n        height: 40,\n        width: 150,\n        justifyContent: 'center',\n        alignItems: 'center',\n        borderColor: 'black',\n        borderWidth: 2,\n        marginTop: 5,\n        marginBottom: 5\n    },\n    primaryButtonText: {\n        color: 'white',\n        fontSize: 20\n    }\n});\n\n\nexport default EditItem\n"]},"metadata":{},"sourceType":"module"}