{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/vic/reactnative/shop/components/SignUpScreen.js\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport axios from 'axios';\n\nvar SignUpScreen = function SignUpScreen(props) {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      email = _useState6[0],\n      setEmail = _useState6[1];\n\n  function signupPressed() {\n    fetch(props.apiURI + '/users', {\n      method: 'POST',\n      body: JSON.stringify({\n        username: username,\n        name: email,\n        password: password\n      }),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\"\n      }\n    }).then(function (response) {\n      if (response.ok == false) {\n        throw new Error(\"HTTP Code \" + response.status + \" - \" + JSON.stringify(response.json()));\n      }\n\n      return response.json();\n    }).then(function (json) {\n      props.navigation.reset({\n        index: 0,\n        routes: [{\n          name: 'SignupCompleted'\n        }]\n      });\n    }).catch(function (error) {\n      console.log(\"Error message:\");\n      console.log(error.message);\n    });\n  }\n\n  return React.createElement(View, {\n    style: styles.screen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.header,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \"Sign Up\"), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, \"Please enter your username\"), React.createElement(TextInput, {\n    style: styles.input,\n    value: username,\n    placeholder: \"johndoe\",\n    onChangeText: function onChangeText(value) {\n      return setUsername(value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, \"Please enter your email\"), React.createElement(TextInput, {\n    style: styles.input,\n    value: email,\n    placeholder: \"test@email.com\",\n    onChangeText: function onChangeText(value) {\n      return setEmail(value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, \"Please enter your password\"), React.createElement(TextInput, {\n    style: styles.input,\n    value: password,\n    placeholder: \"password\",\n    onChangeText: function onChangeText(value) {\n      return setPassword(value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), React.createElement(TouchableHighlight, {\n    onPress: function onPress() {\n      return signupPressed();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.primaryButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.primaryButtonText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, \"Sign up\"))), React.createElement(Button, {\n    title: \"Cancel\",\n    color: \"#000000\",\n    onPress: function onPress() {\n      return props.navigation.reset({\n        index: 0,\n        routes: [{\n          name: 'Login'\n        }]\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  screen: {\n    backgroundColor: 'rgb(227, 178, 0)',\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  header: {\n    fontSize: 40,\n    marginBottom: 20,\n    color: 'white'\n  },\n  text: {\n    fontSize: 20,\n    color: 'white'\n  },\n  input: {\n    borderWidth: 1,\n    borderRadius: 20,\n    height: 40,\n    width: '90%',\n    backgroundColor: 'white',\n    textAlign: 'center',\n    fontSize: 18,\n    marginTop: 5,\n    marginBottom: 20\n  },\n  primaryButton: {\n    backgroundColor: 'rgb(0, 153, 51)',\n    height: 60,\n    width: 200,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderColor: 'black',\n    borderWidth: 2,\n    marginTop: 20,\n    marginBottom: 10\n  },\n  primaryButtonText: {\n    color: 'white',\n    fontSize: 20\n  }\n});\nexport default SignUpScreen;","map":{"version":3,"sources":["/home/vic/reactnative/shop/components/SignUpScreen.js"],"names":["React","useState","axios","SignUpScreen","props","username","setUsername","password","setPassword","email","setEmail","signupPressed","fetch","apiURI","method","body","JSON","stringify","name","headers","then","response","ok","Error","status","json","navigation","reset","index","routes","catch","error","console","log","message","styles","screen","header","input","value","primaryButton","primaryButtonText","StyleSheet","create","backgroundColor","flex","justifyContent","alignItems","fontSize","marginBottom","color","text","borderWidth","borderRadius","height","width","textAlign","marginTop","borderColor"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { View, Text, StyleSheet, Button, TextInput, TouchableHighlight } from 'react-native'\nimport axios from 'axios';\n\nconst SignUpScreen = (props) => {\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n\n  function signupPressed()\n  {\n    fetch(props.apiURI + '/users', {\n        method: 'POST',\n        body: JSON.stringify({\n          username: username,\n          name: email,\n          password: password\n        }),\n        headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\"\n        }\n      })\n      .then(response => {\n        if (response.ok == false) {\n          throw new Error(\"HTTP Code \" + response.status + \" - \" + JSON.stringify(response.json()));\n        }\n        return response.json();\n      })\n      .then(json => {\n        props.navigation.reset({\n          index: 0,\n          routes: [{ name: 'SignupCompleted' }],\n        })\n      })\n      .catch(error => {\n        console.log(\"Error message:\")\n        console.log(error.message)\n      });\n\n  }\n\n  return (\n    <View style={ styles.screen }>\n      <Text style={ styles.header }>Sign Up</Text>\n      <Text>Please enter your username</Text>\n      <TextInput\n        style={ styles.input }\n        value={ username }\n        placeholder=\"johndoe\"\n        onChangeText={ value => setUsername(value)}\n      />\n      <Text>Please enter your email</Text>\n      <TextInput\n        style={ styles.input }\n        value={ email }\n        placeholder=\"test@email.com\"\n        onChangeText={ value => setEmail(value)}\n      />\n      <Text>Please enter your password</Text>\n      <TextInput\n        style={ styles.input }\n        value={ password }\n        placeholder=\"password\"\n        onChangeText={ value => setPassword(value)}\n      />\n      <TouchableHighlight onPress={ () => signupPressed() }>\n        <View style={ styles.primaryButton }>\n          <Text style={ styles.primaryButtonText }>Sign up</Text>\n        </View>\n      </TouchableHighlight>\n      <Button\n        title=\"Cancel\"\n        color=\"#000000\"\n        onPress={\n          () => props.navigation.reset({\n            index: 0,\n            routes: [{ name: 'Login' }],\n          })\n        } />\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  screen: {\n    backgroundColor: 'rgb(227, 178, 0)',\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  header: {\n    fontSize: 40,\n    marginBottom: 20,\n    color: 'white'\n  },\n  text: {\n    fontSize: 20,\n    color: 'white'\n  },\n  input: {\n    borderWidth: 1,\n    borderRadius: 20,\n    height: 40,\n    width: '90%',\n    backgroundColor: 'white',\n    textAlign: 'center',\n    fontSize: 18,\n    marginTop: 5,\n    marginBottom: 20\n  },\n  primaryButton: {\n    backgroundColor: 'rgb(0, 153, 51)',\n    height: 60,\n    width: 200,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderColor: 'black',\n    borderWidth: 2,\n    marginTop: 20,\n    marginBottom: 10\n  },\n  primaryButtonText: {\n    color: 'white',\n    fontSize: 20\n\n  }\n});\n\n\nexport default SignUpScreen\n"]},"metadata":{},"sourceType":"module"}